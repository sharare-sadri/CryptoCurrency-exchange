---
# Source: crypto-exchange/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-crypto-exchange-secrets
type: Opaque
data:
  djangoSecretKey: "V3l5NFp3c01MVy1Vb2MtZk1KTExURmlzbkpqN2dNOFpXcDBka3lTczF4MUhscEpwdklBaENFbGF4TTdwTzhIWElsVQ=="
  dbPassword: "UEBzc3cwcmQxMjMl"
---
# Source: crypto-exchange/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-crypto-exchange
  labels:
    helm.sh/chart: crypto-exchange-0.1.0
    app.kubernetes.io/name: crypto-exchange
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8000
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: crypto-exchange
    app.kubernetes.io/instance: release-name
---
# Source: crypto-exchange/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-crypto-exchange
  labels:
    helm.sh/chart: crypto-exchange-0.1.0
    app.kubernetes.io/name: crypto-exchange
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: crypto-exchange
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: crypto-exchange
        app.kubernetes.io/instance: release-name
    spec:
      containers:
        - name: crypto-exchange
          image: "sharare-sadri/crypto-exchange:1.0.0"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          command: ["gunicorn"]
          args:
            - "--bind"
            - "0.0.0.0:8000"
            - "CryptoCurrencyExchange.wsgi"
          env:
            - name: DJANGO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: release-name-crypto-exchange-secrets
                  key: djangoSecretKey
            - name: DATABASE_URL
              value: "postgres://crypto_user:$(DB_PASSWORD)@postgresql-service.default.svc.cluster.local:5432/crypto_db"
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-crypto-exchange-secrets
                  key: dbPassword
            - name: DJANGO_ALLOWED_HOSTS
              # Using a template function to ensure this line is parsed correctly
              value: crypto.example.com,localhost,127.0.0.1
---
# Source: crypto-exchange/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: release-name-crypto-exchange
  labels:
    helm.sh/chart: crypto-exchange-0.1.0
    app.kubernetes.io/name: crypto-exchange
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: Helm
spec:
  ingressClassName: nginx
  rules:
    - host: "crypto.example.com"
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: release-name-crypto-exchange
                port:
                  number: 8000
